# -*- coding: utf-8 -*-
"""HR Data.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1DtxIPk3jxsgWBUmkY-OOgezLls9Z-4Fm
"""

#data lineage

#Read master, outsource1 for digital,sunny,p'pap,IT emp list,sumIT and P'LK updating every month (create function, pyspark)
#P'pap IT emp list is master 1 ,outsource1 2 ,p mook is 3 and P'LK is

#Transfrom to massterfile
#function to clean timesheet data

#Load to database

#create the different part when P'LK date every month

##เอาไฟล์มาต่อกัน อันไหนเดือนก่อนมี - ใหม่ไม่มี >> คนนั้นออก

"""**Goal**
collecting raw data from HR file, core and digital tech lead , transforming to utilize in outsource tracking and budgeting.

**Identify Data**
raw data is from HR team updating outsource headcount by monthly in excel format

**Define the Pipeline**
Stage	Questions
Extract	How do I get the data? (API, scrape, read file?)
Transform	What needs cleaning, joining, formatting, filtering?
Load	Where does the final data go? (Database, file, dashboard?)

**Tools**

Task 1. read hr file to get all headcount name and insert all neccessary data
"""

##import library
import pandas as pd
from datetime import datetime

file_path = '/content/Master File_OS MS Technology Active Headcount and Squad_29 Jan 2025_for share.xlsx'
hr_masterfile = pd.ExcelFile(file_path)

sheet_name = hr_masterfile.sheet_names
print(sheet_name)

"""###list all name in jan and march"""

hr_jan = pd.read_excel(hr_masterfile,sheet_name ='Jan_OS MS list master')
hr_jan = hr_jan[hr_jan['BU'] == 'Makro']
hr_jan_Core = hr_jan[hr_jan['Cat'] == 'Core']
hr_jan_Digital = hr_jan[hr_jan['Cat'] == 'Digital']

hr_jan_Core.head()

### use this in future to read all file
'''
Sheet_name_list = sheet_name[2:7]
print(Sheet_name_list)
for i in Sheet_name_list

'''

hr_mar = pd.read_excel(hr_masterfile,sheet_name ='Mar_OS MS list master')
hr_mar = hr_mar[hr_mar['BU'] == 'Makro']
hr_mar_Core = hr_mar[hr_mar['Cat'] == 'Core']
hr_mar_Digital = hr_mar[hr_mar['Cat'] == 'Digital']
print(hr_mar_Core.head())

hr_jun = pd.read_excel(hr_masterfile,sheet_name ='Jun_OS MS list master')
hr_jun = hr_jun[hr_jun['BU'] == 'Makro']
hr_jun_Core = hr_jun[hr_jun['Cat'] == 'Core']
hr_jun_Digital = hr_jun[hr_jun['Cat'] == 'Digital']
print(hr_jun_Core.head())

"""### find matched and different name

####Jan-Mar
"""

matched_core_jan_mar = pd.merge(hr_jan_Core, hr_mar_Core , on='Full Name (recheck)', how='inner')
diff_core_jan_mar = pd.merge(hr_jan_Core, hr_mar_Core , on='Full Name (recheck)', how='outer', indicator=True)
only_core_jan= diff_core_jan_mar[diff_core_jan_mar['_merge'] == 'left_only']
only_core_mar= diff_core_jan_mar[diff_core_jan_mar['_merge'] == 'right_only']

print(matched_core_jan_mar['Full Name (recheck)'])

print(only_core_jan['Full Name (recheck)'])

print(only_core_mar['Full Name (recheck)'])

"""####Mar-Apr

"""





"""####Apr-May

####May-Jun
"""



"""###import Out source 1"""

file_path = '/content/Out sourece Makro_ALL (1).xlsx'
Makro_ALL = pd.ExcelFile(file_path)

sheet_name_MKALL = Makro_ALL.sheet_names
print(sheet_name_MKALL)

Makro_ALL_Core = pd.read_excel(Makro_ALL,sheet_name ='(Update) MakroCoreTech')
Makro_ALL_Digital = pd.read_excel(Makro_ALL,sheet_name ='MakroDigital')
print(Makro_ALL_Core.head())

hr_jun_Core.head()

diff_core_ALL_Jun = pd.merge(Makro_ALL_Core, hr_jun_Core , on='Full Name (recheck)', how='outer', indicator=True)
only_core_ALL= diff_core_ALL_Jun[diff_core_ALL_Jun['_merge'] == 'left_only']
only_core_Jun= diff_core_ALL_Jun[diff_core_ALL_Jun['_merge'] == 'right_only']
print(only_core_Jun['Full Name (recheck)'])

print(only_core_ALL['Full Name (recheck)'])

Makro_ALL_Digital.head()

hr_jun_Digital

diff_digital_ALL_Jun = pd.merge(Makro_ALL_Digital, hr_jun_Digital , left_on='Full Name (recheck)',right_on='Full Name', how='outer', indicator=True)
only_digital_ALL= diff_digital_ALL_Jun[diff_digital_ALL_Jun['_merge'] == 'left_only']
only_digital_Jun= diff_digital_ALL_Jun[diff_digital_ALL_Jun['_merge'] == 'right_only']
print(only_digital_Jun['Full Name (recheck)'])

